generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Poi {
  id                  String    @id
  place_id            String    @unique
  name                String
  vicinity            String?
  formatted_address   String
  location            Json
  types               Json
  rating              Float?
  user_ratings_total  Int?
  website             String?
  phone_number        String?
  price_level         Int?
  opening_hours       Json?
  google_maps_url     String?
  thumbnail_url       String?
  image_attribution   String?
  photo_references    Json?
  last_updated_at     DateTime
  audio_generated_at  DateTime?
  brief_audio_path    String?
  brief_transcript    String?
  complete_audio_path String?
  complete_transcript String?
  detailed_audio_path String?
  detailed_transcript String?
  tourPois            TourPoi[]
  translations        Translation[]
}

model Tour {
  id                  String    @id
  user_id             String
  name                String
  description         String?
  created_at          DateTime  @default(now())
  last_updated_at     DateTime
  start_location      Json
  end_location        Json
  return_to_start     Boolean   @default(false)
  transportation_mode String
  total_distance      Float
  total_duration      Int
  google_maps_url     String?
  preferences         Json
  user                User      @relation(fields: [user_id], references: [id])
  tourPois            TourPoi[]
}

model TourPoi {
  id               String  @id
  tour_id          String
  poi_id           String
  sequence_number  Int
  distance_to_next Float?
  time_to_next     Int?
  custom_notes     String?
  poi              Poi     @relation(fields: [poi_id], references: [id])
  tour             Tour    @relation(fields: [tour_id], references: [id], onDelete: Cascade)

  @@unique([tour_id, poi_id])
  @@index([tour_id])
}

model User {
  id         String   @id
  email      String   @unique
  created_at DateTime @default(now())
  tours      Tour[]
}

model Translation {
  id              String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  poi_id          String
  content_type    String
  language_code   String
  translated_text String
  audio_path      String?
  created_at      DateTime @default(now()) @db.Timestamptz
  updated_at      DateTime @updatedAt @db.Timestamptz
  poi             Poi      @relation(fields: [poi_id], references: [id], onDelete: Cascade)

  @@unique([poi_id, content_type, language_code])
}
